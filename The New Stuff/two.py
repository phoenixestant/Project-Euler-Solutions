# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 

# By considering the terms in the Fibonacci sequence whose values do not exceed four million (4,000,000), find the sum of the even-valued terms.


def Fibonacci(Fibonnaci_maximum_integer):

    Fibonacci_sequence_array = [1, 1]

    i = 0
    Fibonnaci_integer = -2

    while i < abs(Fibonnaci_integer) - 2:
        
        a = Fibonacci_sequence_array[i]
        b = Fibonacci_sequence_array[i + 1]
        c = Fibonacci_sequence_array[i] + Fibonacci_sequence_array[i + 1]
        Fibonacci_sequence_array.append(c)
        
        i += 1

    return max(Fibonacci_sequence_array)


Fibonacci_while_loop_maximum_integer = 8





while Fibonacci(Fibonacci_while_loop_maximum_integer) < 4000000:

    if Fibonacci(Fibonacci_while_loop_maximum_integer) % 2 == 0:
        Fibonnaci_maximum_integer += 1 + Fibonacci(Fibonacci_while_loop_maximum_integer)

        Fibonacci_while_loop_maximum_integer += 1

print(Fibonacci_maximum)
